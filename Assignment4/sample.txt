import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.Arrays;
import java.util.Random;
import java.util.stream.Collectors;

public class DataGenrator {

	public static void main(String[] args) throws IOException {
		fileGenerator();
	}

	private static void fileGenerator() throws IOException {
		StringBuilder title = new StringBuilder();
		for (int i = 1; i <= 10; i++) {
			title.append("attribute").append(i).append(",");
		}
		String strTitle = title.substring(0, title.length() - 1);
		strTitle = strTitle + ",class";
		Files.write(Paths.get("q1.csv"), strTitle.getBytes());
		for (int i = 1; i <= 100; i++) {
			String data = getSaltString(i);
			String updatedText = data + "Z";
		    String dataStr = "";
			for (int j = 0; j < 10; j++) {
				String[] array = new String[10];
				for (int k = 0; k < 10; k++) {
					if (j == k) {
						array[k] = updatedText;
					} else {
						array[k] = data;
					}
				}
				dataStr = Arrays.asList(array)
					      .stream()
					      .collect(Collectors.joining(","));
				Files.write(Paths.get("q1.csv"), "\n".getBytes(), StandardOpenOption.APPEND);
				dataStr = dataStr + "," + String.valueOf(String.valueOf(i));
				Files.write(Paths.get("q1.csv"), dataStr.getBytes(), StandardOpenOption.APPEND);
			}
		}
	}
	
	private static String getSaltString(int i) {
        String SALTCHARS = "ABCDEFGHIJKLMNOPQRSTUVWXY";
        StringBuilder salt = new StringBuilder();
        Random rnd = new Random();
        while (salt.length() < (i/10+1)) { // length of the random string.
            int index = (int) (rnd.nextFloat() * SALTCHARS.length());
            salt.append(SALTCHARS.charAt(index));
        }
        String saltStr = salt.toString();
        saltStr = saltStr + "X";
        return saltStr;

    }
}
